---
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import logomark from "../../assets/logomark.png";
import ThemeSwitcher from "~/components/common/theme-switcher.astro";
import type { NavItem } from "~/types";

const navItems: Array<NavItem> = [
  { title: "Features", url: "#features" },
  { title: "Compatibility", url: "#compatibility" },
  { title: "Showcase", url: "#showcase" },
];
---

<div class="z-10 w-full flex justify-center items-center px-16 py-3.5 text-sm text-zinc-500 max-md:px-5" style="background: linear-gradient(0deg, #E5D5CB 11.43%, rgba(248, 239, 233, 0.80) 92.86%);">
  <div class="flex gap-5 justify-center items-center max-w-full max-md:flex-wrap">
    <div class="grow self-stretch my-auto tracking-tight">
      <span class="leading-4 text-zinc-500">2024</span>
      <span class="text-zinc-500">年</span>
      <span class="leading-4 text-zinc-500">4</span>
      <span class="text-zinc-500">月</span>
      <span class="leading-4 text-zinc-500">21</span>
      <span class="text-zinc-500">日(日)</span>
      <span class="leading-4 text-zinc-500">23:59</span>
      <span class="text-zinc-500">まで</span>
    </div>
    <div class="flex-auto self-stretch text-3xl text-zinc-600" style="color: var(--dark-grey, #52525B);

/* H2_j */
font-family: HannariMincho;
font-size: 28px;
font-style: normal;
font-weight: 400;
line-height: normal;">
      期間限定募集(第<span class="leading-8">2</span>期)
    </div>
    <div class="flex-auto self-stretch my-auto tracking-tight">
      <span class="text-zinc-500">限定 </span>
      <span class="text-2xl font-bold tracking-wider leading-7 text-zinc-500">
        200
      </span>
      <span class="text-zinc-500">名先着順</span>
    </div>
  </div>
</div>

<script>
  import MicroModal from "micromodal";
  import invariant from "tiny-invariant";

  const menuModalId = "menu-modal";

  const header = document.querySelector("#page-header") as HTMLElement;
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  invariant(header, "header should not be null");
  invariant(menu, "menu should not be null");
  invariant(openNavButton, "openNavButton should not be null");
  invariant(closeNavButton, "closeNavButton should not be null");

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });
</script>

<noscript>
  <style>
    #open-nav-button {
      display: none;
    }
  </style>
</noscript>

<style>
  .fixed-header {
    @apply fixed bottom-auto top-0;
    @apply border-default bg-default text-default;
  }
  .modal.is-open {
    @apply block;
  }
</style>
